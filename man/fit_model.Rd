% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/General_Functions.R
\name{fit_model}
\alias{fit_model}
\title{Fit the specified model}
\usage{
fit_model(model_array, method, model_data, outcome, group = NA, opt = NA)
}
\arguments{
\item{model_array}{a tibble of objects retreived from the \code{make_distribution()} function}

\item{method}{the framework with which the model shoudl be fit provided as an unquoted
argument. Either \code{frequentist}, \code{bayeasian} or \code{randomforest}.}

\item{model_data}{the data frame or tibble containing the variables of the model}

\item{outcome}{the name of the varaible to act as the dependent variable of the model
specified as an expression}

\item{group}{teh name of teh variable to act as the grouping variable of the data
specified as an expression.}

\item{opt}{additional model options provided as a fucntion call to \code{model_options()}}
}
\value{
A tibble contianing a model_results object (contains the given data set and
the model fit), along with relevant information about the model including
the distribution the model was fit to, what variable was set as the dependent
variable, which group (if not NA) the results correpond to, and the formula
for the model.
}
\description{
Fits the specified model and returns a tibble containing model fit information.
}
\details{
Currently, only the binomial distribution is supported within the Bayesian
and random forest frameworks. All models with a specific \code{make_distribution()}
function can be fit within a Frequentist framework. Priors must be set before
fitting a model within a Bayesian framework.

If a grouping variable is specified then each model is fit separately to each
group contained within the grouping variable.
}
\examples{
trial_data <- tibble(w = runif(20, 0, 2), x = sample(c(1, 2), 20, TRUE),
                     y = rbinom(20, 1, .75), z = rbinom(20, 15, .5))
make_pois(1) \%>\% fit_model(frequentist, trial_data, z)
make_pois(w, x) \%>\% fit_model(frequentist, trial_data, z)
make_pois(w) \%>\% fit_model(frequentist, trial_data, z, x)
make_binom(1) \%>\% fit_model(frequentist, trial_data, y)
make_binom(w) \%>\% fit_model(frequentist, tiral_data, z, opt = model_options(max = 15))
make_binom(w) \%>\% set_priors(int = dnorm(0, .01), w = dunif(-100, 100)) \%>\%
                  fit_model(bayesian, trial_data, y)
        
}
